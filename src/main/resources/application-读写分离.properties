spring.application.name=sharding-jdbc-demo

spring.profiles.active=dev

# 内存模式，不会持久化源数据，开发模式调试使用。生产使用集群模式
spring.shardingsphere.mode.type=Memory

# 配置真实的数据源
spring.shardingsphere.datasource.names=master,slave1,slave2

#master配置
spring.shardingsphere.datasource.master.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.master.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.master.jdbc-url=jdbc:mysql://192.168.1.55:3306/db_user?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.shardingsphere.datasource.master.username=root
spring.shardingsphere.datasource.master.password=123456

#slave1配置
spring.shardingsphere.datasource.slave1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.slave1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.slave1.jdbc-url=jdbc:mysql://192.168.1.55:3307/db_user?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.shardingsphere.datasource.slave1.username=root
spring.shardingsphere.datasource.slave1.password=123456

#slave2配置
spring.shardingsphere.datasource.slave2.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.slave2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.slave2.jdbc-url=jdbc:mysql://192.168.1.55:3308/db_user?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.shardingsphere.datasource.slave2.username=root
spring.shardingsphere.datasource.slave2.password=123456


#静态读写分离：
#是指传统的主从数据库配置，通过 write-data-source-name 和 read-data-source-names 指定读写库，这个关系是静态的。
#动态读写分离：
#适用于 MGR 这种 DB 集群，集群内部的主节点是可以动态变换的，ShardingSphere 中需要动态去探测哪个节点是主节点。
spring.shardingsphere.rules.readwrite-splitting.data-sources.myds.type=Static
# 写数据源名称
spring.shardingsphere.rules.readwrite-splitting.data-sources.myds.props.write-data-source-name=master
# 读数据源名称，多个从数据源用逗号分隔
spring.shardingsphere.rules.readwrite-splitting.data-sources.myds.props.read-data-source-names=slave1,slave2

# 负载均衡算法名称
spring.shardingsphere.rules.readwrite-splitting.data-sources.myds.load-balancer-name=alg_round

# 负载均衡算法配置
# 负载均衡算法类型
#spring.shardingsphere.rules.readwrite-splitting.load-balancers.alg_round.type=ROUND_ROBIN
#spring.shardingsphere.rules.readwrite-splitting.load-balancers.alg_round.type=RANDOM


#权重算法
spring.shardingsphere.rules.readwrite-splitting.load-balancers.alg_round.type=WEIGHT
spring.shardingsphere.rules.readwrite-splitting.load-balancers.alg_round.props.slave1=1
spring.shardingsphere.rules.readwrite-splitting.load-balancers.alg_round.props.slave2=2

# 打印SQl
spring.shardingsphere.props.sql-show=true